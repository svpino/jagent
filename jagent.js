/*
jAgent 1.0.2012.10.20

Here are some examples of CSS classes generated by this script:

- Browsers: gecko, webkit, chrome, chrome22, safari, safari6 ie, ie8, firefox, firefox16, opera, opera3, konqueror, iron, mozilla  
- Operating Systems: mac, mac10, mac10_8, windows, windows_nt, windows_2000, windows_xp, windows_vista, windows_7, windows_8, freebsd, linux
- Mobile devices: mobile, ios, ios6, ios6_0, ipad, iphone, ipod, android, android4, android4_1, j2me, kindle, playbook, blackberry 
- Screen sizes: max_width_320, max_width_1920
- Orientation: orientation_portrait, orientation_landscape
- Retina Displays: retina

*/

function jAgent() {
	this.GECKO = 'gecko';
	this.FIREFOX = 'firefox';
	this.OPERA = 'opera';
	this.KONQUEROR = 'konqueror';
	this.ANDROID = 'android';
	this.BLACKBERRY = 'blackberry';
	this.WEBKIT = 'webkit';
	this.CHROME = 'chrome';
	this.SAFARI = 'safari';
	this.MSIE = 'msie';
	this.APPLEWEBKIT = 'applewebkit';
	this.MOZILLA = 'mozilla';
	this.IRON = 'iron';
	this.DEVICE = 'device_';
	this.MOBILE = 'mobile';
	this.IPHONE = 'iphone';
	this.IPOD = 'ipod';
	this.IPAD = 'ipad';
	this.IOS = 'ios';
	this.J2ME = 'j2me';
	this.KINDLE = 'kindle';
	this.PLAYBOOK = 'playbook';
	this.MAC = 'mac';
	this.WINDOWSNT = 'windows nt';
	this.WINDOWS = 'windows';
	this.FREEBSD = 'freebsd';
	this.X11 = 'x11';
	this.LINUX = 'linux';
	this.LANGUAGE = 'language_';
	this.RETINA = 'retina';
	this.PORTRAIT = 'portrait';
	this.LANDSCAPE = 'landscape';	

	this.metadata;
	
	var self = this;
	
	this.initialize = function(value) {
		self.metadata = value;
	}
	
	this.isMobile = function() {
		return self.is('mobile');
	}
	
	this.isIOS = function() {
		return self.is(self.IOS);
	}
	
	this.isAndroid = function() {
		return self.is(self.ANDROID);
	}
	
	this.isIPad = function() {
		return self.is(self.IPAD);
	}
	
	this.isIPhone = function() {
		return self.is(self.IPHONE);
	}
	
	this.isIPod = function() {
		return self.is(self.IPOD);
	}
	
	this.isKindle = function() {
		return self.is(self.KINDLE);
	}
	
	this.isBlackberry = function() {
		return self.is(self.BLACKBERRY);
	}
	
	this.isBlackberry = function() {
		return self.is(self.BLACKBERRY);
	}
	
	this.isPlaybook = function() {
		return self.is(self.PLAYBOOK);
	}
	
	this.isJ2ME = function() {
		return self.is(self.J2ME);
	}
	
	this.isChrome = function() {
		return self.is(self.CHROME);
	}
	
	this.isFirefox = function() {
		return self.is(self.FIREFOX);
	}
	
	this.isSafari = function() {
		return self.is(self.SAFARI);
	}
	
	this.isIE = function() {
		return self.is(self.IE);
	}
	
	this.isRetina = function() {
		return self.is(self.RETINA);
	}
	
	this.isPortrait = function() {
		return self.is('orientation_' + self.PORTRAIT);
	}
	
	this.isLandscape = function() {
		return self.is('orientation_' + self.LANDSCAPE);
	}
	
	this.is = function(test) {
		return RegExp(test, "i").test(self.metadata);
	}
}

(function($) {  
	$.jagent = new jAgent();
})(jQuery); 

function initializeJAgent() {
	var userAgent = navigator.userAgent.toLowerCase();
	
	is = function(t) { 
		return RegExp(t, "i").test(userAgent);  
	};
	
	version = function(p, n) { 
		n = n.replace(".","_"); 
		var i = n.indexOf('_');  
		var ver = ""; 
		
		while (i > 0) {
			ver += " " + p + n.substring(0, i);
			i = n.indexOf('_', i + 1);
		} 
		ver += " " + p + n; 
		return ver; 
	};
	
	getBrowserInformationForFirefox = function() {
		return $.jagent.GECKO + " " + $.jagent.FIREFOX 
			+ (/firefox\/((\d+)(\.(\d+))(\.\d+)*)/.test(userAgent) 
				? ' ' + $.jagent.FIREFOX + '_' + RegExp.$2 + ' ' + $.jagent.FIREFOX + '_' + RegExp.$2 + "_" + RegExp.$4 
				: '');
	};
	
	getBrowserInformationForOpera = function() {
		return $.jagent.OPERA + (/version\/((\d+)(\.(\d+))(\.\d+)*)/.test(userAgent) 
			? ' ' + $.jagent.OPERA + '_' + RegExp.$2 + ' ' + $.jagent.OPERA + '_' + RegExp.$2 + "_" + RegExp.$4 
			: (/opera(\s|\/)(\d+)\.(\d+)/.test(userAgent) 
				? ' ' + $.jagent.OPERA + '_' + RegExp.$2 + " " + $.jagent.OPERA + '_' + RegExp.$2 + "_" + RegExp.$3 
				: ''));
	};
	
	getBrowserInformationForChrome = function() {
		return $.jagent.WEBKIT + ' ' + $.jagent.CHROME + (/chrome\/((\d+)(\.(\d+))(\.\d+)*)/.test(userAgent)
			? ' ' + $.jagent.CHROME + '_' + RegExp.$2 + ((RegExp.$4 > 0) 
				? ' ' + $.jagent.CHROME + '_' + RegExp.$2 + "_" + RegExp.$4 
				: '')
			:'');
	};
	
	getBrowserInformationForSafari = function() {
		return ($.jagent.WEBKIT + ' ' + $.jagent.SAFARI + (/version\/((\d+)(\.(\d+))(\.\d+)*)/.test(userAgent)
			? ' ' + $.jagent.SAFARI + '_' + RegExp.$2 + " " + $.jagent.SAFARI + '_' + RegExp.$2 + RegExp.$3.replace('.', '_')
			:  (/ Safari\/(\d+)/i.test(userAgent) 
				? ((RegExp.$1=="419" || RegExp.$1=="417" || RegExp.$1=="416" || RegExp.$1=="412" ) 
					? ' '+ $.jagent.SAFARI + '_2_0' 
					: RegExp.$1 == "312" 
						? ' ' + $.jagent.SAFARI + '_1_3'
						: RegExp.$1=="125" 
							? ' '+ $.jagent.SAFARI + '_1_2'
							: RegExp.$1=="85" 
								? ' ' + $.jagent.SAFARI + '_1_0'
								: '')
				: '')));
	};
	
	getBrowserInformationForAndroid = function() {
		return $.jagent.ANDROID + (/Version\/(\d+)(\.(\d+))+/i.test(userAgent)
			? " " + $.jagent.ANDROID + '_' + RegExp.$1 + " " + $.jagent.ANDROID + '_' + RegExp.$1 + RegExp.$2.replace('.', '_')
			: '')
			+ (/Android (.+); (.+) Build/i.test(userAgent)
				? ' ' + $.jagent.DEVICE + ((RegExp.$2).replace(/ /g,"_")).replace(/-/g, "_")
				: '');
	};
	
	getBrowserInformationForBlackberry = function() {
		return $.jagent.BLACKBERRY + (/Version\/(\d+)(\.(\d+)+)/i.test(userAgent)
			? " " + $.jagent.BLACKBERRY + '_' + RegExp.$1 + " " + $.jagent.BLACKBERRY + '_' + RegExp.$1 + RegExp.$2.replace('.','_')
			: (/Blackberry ?(([0-9]+)([a-z]?))[\/|;]/gi.test(userAgent) 
				? ' ' + $.jagent.BLACKBERRY + '_' + RegExp.$2 + (RegExp.$3 ? ' ' + $.jagent.BLACKBERRY + '_' + RegExp.$2 + RegExp.$3 : '')
				: ''));
	};
	
	getOperatingSystemInformationForAppleDevices = function() {
		return ((/CPU( iPhone)? OS (\d+[_|\.]\d+([_|\.]\d+)*)/i.test(userAgent)  
			? $.jagent.IOS + '_' + version($.jagent.IOS, RegExp.$2) 
			: '') + ' ' + (/(ip(ad|od|hone))/gi.test(userAgent) 
				? RegExp.$1 
				: ""));
	};
	
	getOperatingSystemInformationForMac = function() {
		return $.jagent.MAC + (/mac os x ((\d+)[.|_](\d+))/.test(userAgent) 
			? (' ' + $.jagent.MAC + '_' + RegExp.$2 + ' ' + $.jagent.MAC + '_' + RegExp.$1.replace('.',"_"))
			: '');
	};
	
	getOperatingSystemInformationForWindows = function() {
		return $.jagent.WINDOWS + ( 
			  is($.jagent.WINDOWSNT + ' 6.2') ? ' ' + $.jagent.WINDOWS + '_8'
			: is($.jagent.WINDOWSNT + ' 6.1') ? ' ' + $.jagent.WINDOWS + '_7'
			: is($.jagent.WINDOWSNT + ' 6.0') ? ' ' + $.jagent.WINDOWS + '_vista'
			: is($.jagent.WINDOWSNT + ' 5.2') || is($.jagent.WINDOWSNT + ' 5.1') ? ' ' + $.jagent.WINDOWS + '_xp' 
			: is($.jagent.WINDOWSNT + ' 5.0') ? ' ' + $.jagent.WINDOWS + '_2000'
			: is($.jagent.WINDOWSNT + ' 4.0') || is('WinNT4.0') ? ' ' + $.jagent.WINDOWS + '_nt'
			: '');
	};
	
	getBrowserInformation = function() {
		return (!(/opera|webtv/i.test(userAgent)) && /msie\s(\d+)/.test(userAgent)) ? ($.jagent.MSIE + ' ' + $.jagent.MSIE + (/trident\/4\.0/.test(userAgent) ? '8' : RegExp.$1))
			: is($.jagent.FIREFOX + '/') ? getBrowserInformationForFirefox()	
			: is($.jagent.GECKO + '/') ? $.jagent.GECKO
			: is($.jagent.OPERA) ? getBrowserInformationForOpera() 
			: is($.jagent.KONQUEROR) ? $.jagent.KONQUEROR
			: is($.jagent.BLACKBERRY) ? getBrowserInformationForBlackberry()
			: is($.jagent.ANDROID) ? getBrowserInformationForAndroid()
			: is($.jagent.CHROME) ? getBrowserInformationForChrome()	
			: is($.jagent.IRON) ? $.jagent.WEBKIT + ' ' + $.jagent.IRON
			: is($.jagent.APPLEWEBKIT + '/') ? getBrowserInformationForSafari()
			: is($.jagent.MOZILLA + '/') ? $.jagent.GECKO 
			: '';
	};
	
	getOperatingSystemInformation = function() {
		return is($.jagent.J2ME) ? $.jagent.J2ME
			: is($.jagent.IPAD + '|' + $.jagent.IPOD + '|' + $.jagent.IPHONE) ? getOperatingSystemInformationForAppleDevices()
			: is($.jagent.PLAYBOOK) ? $.jagent.PLAYBOOK
			: is($.jagent.KINDLE) ? $.jagent.KINDLE
			: is($.jagent.MAC) ? getOperatingSystemInformationForMac()
			: is($.jagent.WINDOWS) ? getOperatingSystemInformationForWindows() 
			: is($.jagent.FREEBSD) ? $.jagent.FREEBSD
			: is($.jagent.X11 + '|' + $.jagent.LINUX) ? $.jagent.LINUX
			: '';
	};
	
	getUserLanguageInformation = function() {
		return (/[; |\[](([a-z]{2})(\-[a-z]{2})?)[)|;|\]]/i.test(userAgent))
			? ($.jagent.LANGUAGE + RegExp.$2).replace("-", "_") + (RegExp.$3 != '' 
				? (' ' + $.jagent.LANGUAGE + RegExp.$1).replace("-", "_")
				: '')
			: '';
	};
	
	getAdditionalInformation = function() {
		var isMobile = is($.jagent.ANDROID + "|" 
			+ $.jagent.MOBILE + "|" 
			+ $.jagent.J2ME + "|" 
			+ $.jagent.IPHONE + "|" 
			+ $.jagent.IPOD + "|" 
			+ $.jagent.IPAD + "|" 
			+ $.jagent.BLACKBERRY + "|" 
			+ $.jagent.PLAYBOOK + "|" 
			+ $.jagent.KINDLE) 
				? ' ' + $.jagent.MOBILE + ' ' 
				: '';
			
		var isRetina = window.devicePixelRatio === 2 ? ' ' + $.jagent.RETINA + ' ' : '';
		
		return isMobile + isRetina;	
	};
	
	var	html = document.documentElement;
	var browserInformation = [getBrowserInformation(), getOperatingSystemInformation(), getUserLanguageInformation(), getAdditionalInformation()];

	function processOrientationInformation() {
		var orientation;
		
		if (window.orientation === undefined || window.orientation === 'undefined') {
			var width = $(window).width();	
			var height = $(window).height();
			orientation = ((width < height) ? $.jagent.PORTRAIT : $.jagent.LANDSCAPE);
		}
		else {		
	    	switch (window.orientation) {  
	      		case -90:
	      		case 90:
	        		orientation = $.jagent.LANDSCAPE;
	        		break; 
	      		default:
	        		orientation = $.jagent.PORTRAIT;
	        		break; 
	    	}
		}
    	
    	html.className = html.className.replace(/ ?orientation_\w+/g, "");
    	html.className += ' orientation_' + orientation + ' ';
  	}

	function processWidthInformation() {
		var SCREEN_BUCKETS = [320, 480, 640, 768, 1024, 1152, 1280, 1440, 1680, 1920, 2560];
		var width = $(window).width();
		var max_width;
		
		for (var i = 0; i < SCREEN_BUCKETS.length - 1; i++) { 
			if (width <= SCREEN_BUCKETS[i]) { 
				max_width = SCREEN_BUCKETS[i]; 
				break; 
			}
		}
		
		html.className = html.className.replace(/ [min_|max_]+[width|height]_\d+/g, "");
		html.className += ' max_width_' + max_width + ' ';
	}
	
	window.onorientationchange = processOrientationInformation;
    window.onresize = processWidthInformation;
	processOrientationInformation();
	processWidthInformation();	
	
	html.className = (browserInformation.join(' ') + html.className).replace(/^ /, "").replace(/ +/g," ");

	$.jagent.initialize(html.className);

	return html.className;
}

initializeJAgent();
